<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit">

    <!-- Default text color -->
    <SolidColorBrush x:Key="TextColor" Color="#345"/>

    <!-- Label text color -->
    <SolidColorBrush x:Key="TextColorLabel" Color="#222"/>

    <!-- Default text color -->
    <SolidColorBrush x:Key="TextColorDisabled" Color="#888"/>

    <!--- Default text background color -->
    <SolidColorBrush x:Key="TextBackColor" Color="#FFF"/>

    <!--- Error text background color -->
    <SolidColorBrush x:Key="ErrorBackColor" Color="#FEE"/>

    <!--- Default Border Brush -->
    <SolidColorBrush x:Key="BorderColor" Color="#97a8ac"/>

    <LinearGradientBrush x:Key="DefaultBack" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#666" Offset="0"/>
        <GradientStop Color="#AAA" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProjektBack" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FF18800A" Offset="0"/>
        <GradientStop Color="#FFD2FCCB" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TimePlanGreyBlue2" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform Angle="-52.431" CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#FFEEEEEE"/>
        <GradientStop Color="#FFE8EBFF" Offset="1"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#99cd6b" />


        </Style.Resources>
    </Style>

    <!--<Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBox x:Name="PART_TextBox"
     Text="{Binding Path=SelectedDate, StringFormat='yyyy-MM-dd', 
     RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- Style for big textboxes -->
    <Style x:Key="textBoxBigStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <!-- <Setter Property="Padding" Value="3,1,3,0"/> -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0"
                                      Color="#AAFF00"
                                      Opacity="0"
                                      BlurRadius="7"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource BorderColor}" x:Name="Bd" CornerRadius="4" BorderThickness="2">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1.0"
                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                 Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0.0"
                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                 Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for smaller textboxes -->
    <Style x:Key="textBoxSmallStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Courier New"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#345"/>
        <!--<Setter Property="SnapsToDevicePixels" Value="True"/>-->
        <!-- <Setter Property="Padding" Value="3,1,3,0"/> -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{StaticResource TextBackColor}" BorderBrush="{StaticResource BorderColor}" x:Name="Bd" CornerRadius="2" BorderThickness="2">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for error textboxes -->
    <Style x:Key="BoxErrorStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <!-- <Setter Property="Padding" Value="3,1,3,0"/> -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid>
                        <Border Background="{StaticResource ErrorBackColor}" BorderBrush="{StaticResource BorderColor}" x:Name="Bd" CornerRadius="4" BorderThickness="2">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <Image Name="ErrorImage" Width="20" Height="20" Opacity="0.8" Margin="0,0,4,0" Source="Images/error.png" HorizontalAlignment="Right" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality">
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for warning textboxes -->
    <Style x:Key="BoxWarningStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <!-- <Setter Property="Padding" Value="3,1,3,0"/> -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid>
                        <Border Background="{StaticResource TextBackColor}" BorderBrush="{StaticResource BorderColor}" x:Name="Bd" CornerRadius="4" BorderThickness="2">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <Image Name="ErrorImage" Width="20" Height="20"  Opacity="0.8" Margin="0,0,4,0" Source="Images/info.png" HorizontalAlignment="Right" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality">
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for big orderstyle -->
    <Style x:Key="textBoxOrderStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <!-- <Setter Property="Padding" Value="3,1,3,0"/> -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{StaticResource TextBackColor}" BorderBrush="{StaticResource BorderColor}" CornerRadius="0,0,6,6" BorderThickness="2,0,2,2">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for big combo -->
    <Style x:Key="comboBoxBigStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Padding" Value="7,0"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Border.BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Border.Background" Value="{StaticResource TextBackColor}"/>
        <Setter Property="Border.BorderThickness" Value="2"/>
        <Setter Property="Border.CornerRadius" Value="4,4,4,4"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
    </Style>

    <!-- Special combo.. -->
    <Style x:Key="comboBoxSpec" TargetType="{x:Type ComboBox}">
        <Setter Property="Padding" Value="7,0"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Border.BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Border.Background" Value="{StaticResource TextBackColor}"/>
        <Setter Property="Border.BorderThickness" Value="3"/>
        <Setter Property="Border.CornerRadius" Value="0,0,5,5"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
    </Style>

    <!-- Style for labels -->
    <Style x:Key="labelstyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorLabel}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0,0,6,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Style for labels -->
    <Style x:Key="labelsmallstyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Courier New"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorLabel}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0,0,6,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

    </Style>
    <!-- Color for Offert -->
    <LinearGradientBrush x:Key="BlueShade" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#Feee" Offset="0"/>
        <GradientStop Color="#F78f" Offset="1"/>
    </LinearGradientBrush>

    <!-- Color for Offert -->
    <LinearGradientBrush x:Key="LightBlueShade" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#Feee" Offset="0"/>
        <GradientStop Color="#Fbcf" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBlueShade" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#Feee" Offset="0"/>
        <GradientStop Color="#F34f" Offset="1"/>
    </LinearGradientBrush>

    <!-- Color for Offert -->
    <LinearGradientBrush x:Key="RedShade" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#Feee" Offset="0"/>
        <GradientStop Color="#Ff87" Offset="1"/>
    </LinearGradientBrush>

    <!-- Color for Offert -->
    <LinearGradientBrush x:Key="LightRedShade" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#Feee" Offset="0"/>
        <GradientStop Color="#Ffcb" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkRedShade" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#Feee" Offset="0"/>
        <GradientStop Color="#Ff43" Offset="1"/>
    </LinearGradientBrush>


    <!-- Color for Offert -->
    <LinearGradientBrush x:Key="DisabledShade" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#Feee" Offset="0"/>
        <GradientStop Color="#F999" Offset="1"/>
    </LinearGradientBrush>



    <!-- Color for checked button -->
    <LinearGradientBrush x:Key="CheckedButton" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#abdd6b" Offset="0"/>
        <GradientStop Color="#e0f3c7" Offset="1"/>
    </LinearGradientBrush>

    <!-- Color for checked button -->
    <LinearGradientBrush x:Key="CheckedButton2" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#90dd50" Offset="0"/>
        <GradientStop Color="#e0f3c7" Offset="1"/>
    </LinearGradientBrush>

    <!-- Color for background on borders -->
    <LinearGradientBrush x:Key="BorderBackground" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#ccb"  Offset="0.0" />
        <GradientStop Color="#eee" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Color for background on borders -->
    <LinearGradientBrush x:Key="BorderBackground2" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#A7B4CC"  Offset="0.0" />
        <GradientStop Color="#eee" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Color for background on borders -->
    <LinearGradientBrush x:Key="BorderBackground3" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#C7D4BB"  Offset="0.0" />
        <GradientStop Color="#DDD" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Style for order buttons -->
    <Style x:Key="orderbutton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="6,6,0,0" BorderThickness="2,2,2,0" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--left order buttons -->
    <Style x:Key="leftorderbutton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="6,0,0,0" BorderThickness="2,2,0,0" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for left textbox orderstyle -->
    <Style x:Key="leftTextBoxOrderStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <!-- <Setter Property="Padding" Value="3,1,3,0"/> -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{StaticResource TextBackColor}" BorderBrush="{StaticResource BorderColor}" CornerRadius="0,0,0,6" BorderThickness="2,0,0,2">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for order buttons -->
    <Style x:Key="RightSearch" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="0,6,6,0" BorderThickness="2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <Image Name="Lock" Source="Images/search.png" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="defaultbutton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0"
                                      Color="#AAFF00"
                                      Opacity="0"
                                      BlurRadius="7"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="6" BorderThickness="2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1.0"
                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                 Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0.0"
                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                 Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="redbutton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0"
                                      Color="#AAFF00"
                                      Opacity="0"
                                      BlurRadius="7"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="6" BorderThickness="2" Background="{StaticResource LightRedShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource RedShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkRedShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1.0"
                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                 Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0.0"
                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                 Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for radiobuttons on menuchoice-->
    <Style x:Key="radiobutton" TargetType="{x:Type RadioButton}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Name="Border1" CornerRadius="6" BorderThickness="2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource CheckedButton2}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource CheckedButton}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for radiobuttons on menuchoice-->
    <Style x:Key="togglebutton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="Border1" CornerRadius="6" BorderThickness="2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource CheckedButton2}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource CheckedButton}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Lock button style-->
    <Style x:Key="LockButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="Border1" CornerRadius="6" BorderThickness="2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <Image Name="Lock" Source="Images/lock_open.png" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource CheckedButton2}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Lock" Property="Source" Value="Images/lock.png" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Lock button style-->
    <Style x:Key="LightButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="Border1" CornerRadius="6" BorderThickness="2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <Image Margin="2" HorizontalAlignment="Center" Name="Lock" Source="Images/bulb.png" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource CheckedButton2}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Lock" Property="Source" Value="Images/bulblight.png" />
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default style for tab controls.. very big and clear -->
    <Style TargetType="TabControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border BorderThickness="3,3,3,3" Grid.Row="1" CornerRadius="0,20,20,20" BorderBrush="{StaticResource BorderColor}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,20,20,20" 
                BorderBrush="{TemplateBinding BorderBrush}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="0,20,20,20">
                                    <ContentPresenter ContentSource="SelectedContent"/>
                                </Border>
                            </Border>
                        </Border>
                        <TabPanel Grid.Row="0" IsItemsHost="true"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default style for tab items.. couples with prev tabcontrol -->
    <Style TargetType="TabItem">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16,11,16,0"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Border Name="Border1" CornerRadius="8,8,0,0" Background="{TemplateBinding Background}"  BorderThickness="4,4,4,0" BorderBrush="{StaticResource BorderColor}"></Border>
                            </Grid>
                            <Border  Name="Border2" BorderThickness="0" Padding="{TemplateBinding Padding}">
                                <ContentPresenter ContentSource="Header"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource TextBackColor}"/>
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default style for checkboxes -->
    <Style TargetType="{x:Type CheckBox}" x:Key="DefaultCheckbox">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                 TargetType="{x:Type CheckBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                            CornerRadius="3">
                        <Grid>
                            <!-- ContentPresenter displays content of CheckBox -->
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Border Name="Border1"/>
                        </Grid>
                    </Border>
                    <!-- This Border displays a semi-transparent red X -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter  TargetName="Border1" Property="Background">
                                <Setter.Value>
                                    <VisualBrush Opacity="0.5">
                                        <VisualBrush.Visual>
                                            <Path Name="path" 
                                              Data="M 0 0 L 10 10 M 10 0 L 0 10"
                                              Stroke="#F070" 
                                              StrokeThickness="3"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              StrokeLineJoin="Round" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Checkmark style for checkboxes -->
    <Style x:Key="checkMark" TargetType="{x:Type CheckBox}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                 TargetType="{x:Type CheckBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                            CornerRadius="3">
                        <Grid>
                            <!-- ContentPresenter displays content of CheckBox -->
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Border Name="Border1"/>
                        </Grid>
                    </Border>
                    <!-- This Border displays a semi-transparent red X -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter  TargetName="Border1" Property="Background">
                                <Setter.Value>
                                    <VisualBrush Opacity="0.5">
                                        <VisualBrush.Visual>
                                            <Path Name="path"
                                              Data="M 1 4 L 3 8 L 8 2"
                                              Stroke="#F070" 
                                              StrokeThickness="3"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              StrokeLineJoin="Round" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for updown textbox -->
    <Style x:Key="updowninput" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="#fff" BorderBrush="{StaticResource BorderColor}" CornerRadius="6,0,0,6" BorderThickness="2,2,1,2">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for updown buttons -->
    <Style x:Key="updownplus" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="0,6,0,0" BorderThickness="1,2,2,1" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <Viewbox>
                            <ContentPresenter Content="+" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for updown buttons -->
    <Style x:Key="updownminus" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <!-- <Setter Property="Background" Value="{StaticResource buttonbrush1}"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="0,0,6,0" BorderThickness="1,1,2,2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <Viewbox>
                            <ContentPresenter Content="-" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for updown buttons -->
    <!--<Style x:Key="datepickerbutton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="0,6,6,0" BorderThickness="1,2,2,2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <Image Source="Images/date.png"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--A style for tooltips-->

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#fdd" Offset="0.0"/>
                <GradientStop Color="#fee" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <!--<Setter Property="Foreground" Value="#FFF"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Name="Border"
                          Background="{StaticResource LightBrush}"
                          BorderBrush="{StaticResource SolidBorderBrush}"
                          CornerRadius="6"
                          BorderThickness="2">
                        <ContentPresenter Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="NodeTemplate_Test" >
        <StackPanel Orientation="Horizontal" Opacity="{Binding Path=opacityVal}" Margin="0,2,0,2">
            <TextBlock Text="M.S. " Foreground="DarkBlue"/>
            <Label Padding="0" Margin="0" Content="{Binding Path=materialKostnad}" Width="65" HorizontalContentAlignment="Right" FontWeight="Normal"/>
            <TextBlock Margin="5,0,0,0" Text="M.I. " Foreground="DarkBlue"/>
            <Label Padding="0" Margin="0" Content="{Binding Path=materialInköpspris}" Width="65" HorizontalContentAlignment="Right" FontWeight="Normal"/>
            <TextBlock Margin="5,0,0,0" Text="Tid " Foreground="DarkBlue"/>
            <Label Padding="0" Content="{Binding Path=timmar}" Width="30" HorizontalContentAlignment="Right" Margin="6,0,0,0" FontWeight="Normal"/>
            <TextBlock Margin="5,0,0,0" Text="Arb " Foreground="DarkBlue"/>
            <Label Padding="0" Content="{Binding Path=monteringsKostnad}"  Width="50" HorizontalContentAlignment="Right" Margin="6,0,0,0" FontWeight="Normal"/>
            <TextBlock Text="{Binding Path=name}" Margin="6,0,0,0" Foreground="DarkGreen"/>
        </StackPanel>
    </DataTemplate>


    <DataTemplate x:Key="NodeTemplate_PDF" >
        <StackPanel Orientation="Horizontal" Opacity="{Binding Path=opacityVal}" Margin="0,2,0,2">
            <Image Name="Lock" Source="Images/dosdoc.png" Width="20" Height="20" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality"></Image>
            <TextBlock Text="{Binding Path=document}" Foreground="DarkGreen" Margin="3">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="TextDecorations" Value="Underline" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
    </DataTemplate>


    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
                                <Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
                                <Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
                                <Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="0" SnapsToDevicePixels="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
                            <Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" Focusable="{TemplateBinding Focusable}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1" MinHeight="0" MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"/>
                            <ContentPresenter x:Name="ExpandSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="TreeViewItem">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"/>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                            Path=IsMouseOver}" Value="True"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                            Path=IsSelected}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#ffe5f3fb"/>
                                        <Setter Property="BorderBrush" Value="#ffa5d7f0"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="logobuttonFactory" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="15,15,15,15" BorderThickness="2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="#aaa" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="logobuttonFactoryLeft" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="15,0,0,15" BorderThickness="2,2,1,2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="#aaa" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="logobuttonFactoryRight" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border1" CornerRadius="0,15,15,0" BorderThickness="1,2,2,2" Background="{StaticResource LightBlueShade}" BorderBrush="{StaticResource BorderColor}">
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource BlueShade}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DisabledShade}" />
                            <Setter Property="Foreground" Value="#aaa" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource DarkBlueShade}" />
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>